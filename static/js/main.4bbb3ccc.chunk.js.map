{"version":3,"sources":["Components/Buttons.js","App.js","reportWebVitals.js","index.js"],"names":["ButtonsLayout","props","className","onClick","click","value","App","state","previous","operation","undefined","current","buttonClickedHandler","event","target","match","appendNumber","chooseOperation","buttonValue","setState","includes","operationValue","applyOperation","equal","allClear","delete","console","error","compute","result","isNaN","Number","toString","substring","length","this","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4bbb3ccc.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Buttons.css'\r\n\r\nconst ButtonsLayout = (props) => {\r\n    return (\r\n        <>\r\n            <button className=\"span-two\" onClick={props.click} value=\"AC\" key=\"AC\">AC</button>\r\n            <button onClick={props.click} value=\"DEL\" key=\"DEL\">DEL</button>\r\n            <button onClick={props.click} value=\"÷\" key=\"÷\">÷</button>\r\n            <button onClick={props.click} value=\"1\" key=\"1\">1</button>\r\n            <button onClick={props.click} value=\"2\" key=\"2\">2</button>\r\n            <button onClick={props.click} value=\"3\" key=\"3\">3</button>\r\n            <button onClick={props.click} value=\"*\" key=\"*\">*</button>\r\n            <button onClick={props.click} value=\"4\" key=\"4\">4</button>\r\n            <button onClick={props.click} value=\"5\" key=\"5\">5</button>\r\n            <button onClick={props.click} value=\"6\" key=\"6\">6</button>\r\n            <button onClick={props.click} value=\"+\" key=\"+\">+</button>\r\n            <button onClick={props.click} value=\"7\" key=\"7\">7</button>\r\n            <button onClick={props.click} value=\"8\" key=\"8\">8</button>\r\n            <button onClick={props.click} value=\"9\" key=\"9\">9</button>\r\n            <button onClick={props.click} value=\"-\" key=\"-\">-</button>\r\n            <button onClick={props.click} value=\".\" key=\".\">.</button>\r\n            <button onClick={props.click} value=\"0\" key=\"0\">0</button>\r\n            <button className='span-two equal' onClick={props.click} value=\"=\" key=\"=\">=</button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ButtonsLayout;","import React from 'react';\r\nimport './App.css';\r\nimport Buttons from './Components/Buttons';\r\n// import Output from './Components/Output';\r\n\r\nclass App extends React.Component {\r\n\r\n  state = {\r\n    previous: '',\r\n    operation: undefined,\r\n    current: '',\r\n  };\r\n\r\n  buttonClickedHandler = (event) => {\r\n    const regEx = /^(\\d|\\.)$/\r\n    if (event.target.value.match(regEx)) {\r\n      this.appendNumber(event.target.value);\r\n    } else {\r\n      this.chooseOperation(event.target.value);\r\n    }\r\n  }\r\n\r\n  appendNumber = (buttonValue) => {\r\n    this.setState((state) => {\r\n      let current = state.current + buttonValue;\r\n      if (buttonValue === '.' && state.current.includes(\".\")) return;\r\n      if (current === \".\") return { current: \"0.\" };\r\n      return { current: state.current + buttonValue }\r\n    })\r\n  }\r\n\r\n  chooseOperation = (operationValue) => {\r\n    const regEx = /\\+|-|\\*|÷/\r\n    if (operationValue.match(regEx)) {\r\n      this.applyOperation(operationValue);\r\n    } else if (operationValue === \"=\") {\r\n      this.equal();\r\n    } else if (operationValue === \"AC\") {\r\n      this.allClear();\r\n    } else if (operationValue === \"DEL\") {\r\n      this.delete();\r\n    } else {\r\n      console.error(\"unsupported function\", operationValue);\r\n    }\r\n  }\r\n\r\n  applyOperation = (operationValue) => {\r\n    this.setState((state) => {\r\n      if (state.current === \"\") return;\r\n      if (state.previous !== \"\") {\r\n        let result = this.compute();\r\n        return {\r\n          previous: result,\r\n          operation: operationValue,\r\n          current: ''\r\n        }\r\n      }\r\n      return {\r\n        previous: state.current,\r\n        operation: operationValue,\r\n        current: ''\r\n      }\r\n    })\r\n  }\r\n\r\n  compute = () => {\r\n    let result = 0;\r\n    if (isNaN(this.state.current) || isNaN(this.state.previous)) return;\r\n    let previous = Number(this.state.previous);\r\n    let current = Number(this.state.current)\r\n    switch (this.state.operation) {\r\n      case '+':\r\n        result = previous + current;\r\n        break;\r\n      case '-':\r\n        result = previous - current;\r\n        break;\r\n      case '*':\r\n        result = previous * current;\r\n        break;\r\n      case '÷':\r\n        result = previous / current;\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  equal = () => {\r\n    let result = this.compute();\r\n    this.setState({\r\n      previous: \"\",\r\n      operation: undefined,\r\n      current: result\r\n    })\r\n  }\r\n\r\n  allClear = () => {\r\n    this.setState({\r\n      previous: '',\r\n      operation: undefined,\r\n      current: ''\r\n    })\r\n  }\r\n  \r\n  delete = () => {\r\n    if (this.state.current !== \"\") {\r\n      this.setState((state) => ({\r\n        current: state.current.toString().substring(0, state.current.length - 1)\r\n      }))\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='calculator-grid'>\r\n        test text\r\n        {/* <Output previous={this.state.previous} operation={this.state.operation} current={this.state.current} /> */}\r\n        <Buttons click={this.buttonClickedHandler} />\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}